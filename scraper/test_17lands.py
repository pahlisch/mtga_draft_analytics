# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test17lands():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_17lands(self):
    self.driver.get("https://www.17lands.com/")
    self.driver.set_window_size(1480, 837)
    self.driver.find_element(By.LINK_TEXT, "Analytics").click()
    self.driver.find_element(By.LINK_TEXT, "Card Performance").click()
    dropdown = self.driver.find_element(By.ID, "expansion")
    dropdown.find_element(By.XPATH, "//option[. = 'BRO']").click()
    element = self.driver.find_element(By.ID, "expansion")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "expansion")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "expansion")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    dropdown = self.driver.find_element(By.ID, "format")
    dropdown.find_element(By.XPATH, "//option[. = 'QuickDraft']").click()
    element = self.driver.find_element(By.ID, "format")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "format")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "format")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    dropdown = self.driver.find_element(By.ID, "user-group")
    dropdown.find_element(By.XPATH, "//option[. = 'bottom']").click()
    element = self.driver.find_element(By.ID, "user-group")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.ID, "user-group")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.ID, "user-group")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".divider").click()
    self.driver.find_element(By.LINK_TEXT, "Download as CSV").click()
    self.driver.close()
  
